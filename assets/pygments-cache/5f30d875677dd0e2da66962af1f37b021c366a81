<div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>

<span class="kn">import</span> <span class="p">(</span>
	<span class="s">&quot;fmt&quot;</span>
	<span class="s">&quot;io&quot;</span>
	<span class="s">&quot;net/http&quot;</span>
	<span class="s">&quot;os&quot;</span>

	<span class="s">&quot;github.com/badgerodon/socketmaster/client&quot;</span>
	<span class="s">&quot;github.com/badgerodon/socketmaster/protocol&quot;</span>
<span class="p">)</span>

<span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="nx">li</span><span class="p">,</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">client</span><span class="p">.</span><span class="nx">Listen</span><span class="p">(</span><span class="nx">protocol</span><span class="p">.</span><span class="nx">SocketDefinition</span><span class="p">{</span>
		<span class="nx">Port</span><span class="p">:</span> <span class="mi">8000</span><span class="p">,</span>
		<span class="nx">HTTP</span><span class="p">:</span> <span class="o">&amp;</span><span class="nx">protocol</span><span class="p">.</span><span class="nx">SocketHTTPDefinition</span><span class="p">{</span>
			<span class="nx">PathPrefix</span><span class="p">:</span> <span class="s">&quot;/b&quot;</span><span class="p">,</span>
		<span class="p">},</span>
	<span class="p">})</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
		<span class="nx">os</span><span class="p">.</span><span class="nx">Exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
	<span class="p">}</span>
	<span class="k">defer</span> <span class="nx">li</span><span class="p">.</span><span class="nx">Close</span><span class="p">()</span>

	<span class="nx">http</span><span class="p">.</span><span class="nx">HandleFunc</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">res</span> <span class="nx">http</span><span class="p">.</span><span class="nx">ResponseWriter</span><span class="p">,</span> <span class="nx">req</span> <span class="o">*</span><span class="nx">http</span><span class="p">.</span><span class="nx">Request</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">io</span><span class="p">.</span><span class="nx">WriteString</span><span class="p">(</span><span class="nx">res</span><span class="p">,</span> <span class="s">&quot;From B&quot;</span><span class="p">)</span>
	<span class="p">})</span>
	<span class="nx">err</span> <span class="p">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">Serve</span><span class="p">(</span><span class="nx">li</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
	<span class="k">if</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
		<span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
		<span class="nx">os</span><span class="p">.</span><span class="nx">Exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
	<span class="p">}</span>
<span class="p">}</span>
</pre></div>
